---
import Section from "../Section.astro";
import HTML from "@/icons/html.astro";
import CSS from "@/icons/css.astro";
import JavaScript from "@/icons/javascript.astro";
import TypeScript from "@/icons/type.astro";
import React from "@/icons/react.astro";
import Node from "@/icons/node.astro";
import MySQL from "@/icons/sql.astro";
import Git from "@/icons/git.astro";
import GitHub from "@/icons/GitHub.astro";
import Tailwind from "@/icons/tailwind.astro";
import Next from "@/icons/next.astro";
import { skills } from "@cv";
import Swift from "@/icons/swift.astro";
import SwiftUI from "@/icons/swiftui.astro";
import Kotlin from "@/icons/kotlin.astro";
import Flutter from "@/icons/flutter.astro";
import Figma from "@/icons/Figma.astro";
import Gitlab from "@/icons/Gitlab.astro";

const SKILLS_ICONS: Record<string, any> = {
	HTML,
	CSS,
	JavaScript,
	TypeScript,
	React,
	Node,
	MySQL,
	Git,
	GitHub,
	Next,
	Tailwind,
	Swift,
	SwiftUI,
	Kotlin,
	Flutter,
	Figma,
	Gitlab,
};
---

<Section className={Astro.props.className} title="Technology Stacks">
   <ul class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
      {skills.map(({ name, level, keywords }) => {
         const iconName = name === "Next.js" ? "Next" : name;
         const Icon = SKILLS_ICONS[iconName];
         const levelColors = {
            Beginner: "bg-blue-200 text-blue-800",
            Intermediate: "bg-yellow-200 text-yellow-800",
            Expert: "bg-green-200 text-green-800",
         };
         return (
            <li class="relative p-2 border rounded-md ring-skin-muted bg-skin-button-muted/50 p-5 shadow-sm ring-1 dark:bg-gray-800 transition-transform duration-300 ease-in-out transform hover:scale-105 hover:shadow-lg hover:ring-2 hover:ring-skin-hue dark:hover:ring-skin-hue/80 active:scale-95 group overflow-hidden">
               <div class="flex items-center gap-2">
                  {Icon && <Icon class="w-6 h-6 text-gray-700 dark:text-gray-300 transition-transform duration-300 ease-in-out transform hover:rotate-12 hover:scale-110" />} 
                  <span class="text-gray-900 dark:text-white font-medium transition-colors duration-300 ease-in-out hover:text-skin-hue">
                     {name}
                  </span>
               </div>
               <span class={`mt-1 inline-block text-xs font-semibold px-2 py-1 rounded ${levelColors[level]} transition-colors duration-300 ease-in-out hover:bg-opacity-80`}>
                  {level}
               </span>
               <div class="mt-2 max-h-0 overflow-hidden transition-all duration-300 ease-in-out group-hover:max-h-screen opacity-0 group-hover:opacity-100">
                  <div class="flex flex-wrap gap-2">
                     {keywords.map((keyword) => (
                        <span class="bg-gray-200 dark:bg-gray-700 text-xs text-gray-600 dark:text-gray-300 px-2 py-1 rounded-full ring-1 ring-gray-300 dark:ring-gray-600 inline-block transition-transform duration-300 ease-in-out transform group-hover:scale-100">
                           {keyword}
                        </span>
                     ))}
                  </div>
               </div>
            </li>
         );
      })}
   </ul>
</Section>